version: 1
# Top-level frontend section for global setup and cache
frontend:
  phases:
    preBuild:
      commands:
        - echo "Installing root dependencies..."
        - npm ci # Install root dependencies based on lock file
  cache:
    paths:
      - node_modules/**/* # Cache root node_modules (relative to root)
      - packages/shared-types/dist/**/* # Cache shared-types build output (relative to root)

# Define the applications within the monorepo
applications:
  - # Configuration for the main frontend application
    appRoot: frontend 
    frontend:
      buildPath: '/'
      phases:
        preBuild:
          commands:
            - echo "Installing root dependencies (main app)..."
            - npm ci
        build:
          commands:
            - echo "Building shared-types workspace (main app)..."
            - npm run build -w @usuaya/shared-types
            - echo "Building frontend workspace (main app)..."
            - npm run build -w frontend
      artifacts:
        baseDirectory: frontend/.next 
        files:
          - '**/*'
      cache:
        paths:
          - node_modules/**/* 
          - packages/shared-types/dist/**/* 

  - # Configuration for the amplify-test application
    appRoot: amplify-test # Root directory for this app
    frontend:
      buildPath: '/' # Also build from the monorepo root
      phases:
        preBuild:
          commands:
            # Root npm ci should cover dependencies unless it has unique ones
            - echo "Root deps already installed, skipping preBuild for test-app"
            # If amplify-test had unique dependencies *not* in root:
            # - cd amplify-test && npm install
            # - cd ..
        build:
          commands:
            - echo "Building amplify-test workspace..."
            # Use workspace command to build this specific app
            - npm run build -w amplify-test # Use package name from its package.json
      artifacts:
        # Path relative to the project root
        baseDirectory: amplify-test/.next 
        files:
          - '**/*'
      cache:
        paths:
          # Cache root node_modules again (might be redundant but safe)
          - node_modules/**/* 